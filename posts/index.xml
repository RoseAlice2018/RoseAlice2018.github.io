<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - 小叮当</title>
        <link>https://www.xiaodingdang.fit/posts/</link>
        <description>所有文章 | 小叮当</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 25 Aug 2025 20:34:37 &#43;0800</lastBuildDate><atom:link href="https://www.xiaodingdang.fit/posts/" rel="self" type="application/rss+xml" /><item>
    <title>RAG优化2 Chunk</title>
    <link>https://www.xiaodingdang.fit/posts/rag%E4%BC%98%E5%8C%962-chunk/</link>
    <pubDate>Mon, 25 Aug 2025 20:34:37 &#43;0800</pubDate>
    <author>蝴蝶🦋</author>
    <guid>https://www.xiaodingdang.fit/posts/rag%E4%BC%98%E5%8C%962-chunk/</guid>
    <description><![CDATA[文本切块是数据向量化存入向量数据库等核心优化部分。切的块不能太长，太长的块损失的语义信息较多，导致召回准确率较低，过长的召回文本也将限制放入]]></description>
</item>
<item>
    <title>RAG文本召回模型</title>
    <link>https://www.xiaodingdang.fit/posts/rag%E6%96%87%E6%9C%AC%E5%8F%AC%E5%9B%9E%E6%A8%A1%E5%9E%8B/</link>
    <pubDate>Mon, 25 Aug 2025 17:19:02 &#43;0800</pubDate>
    <author>蝴蝶🦋</author>
    <guid>https://www.xiaodingdang.fit/posts/rag%E6%96%87%E6%9C%AC%E5%8F%AC%E5%9B%9E%E6%A8%A1%E5%9E%8B/</guid>
    <description><![CDATA[本文主要介绍RAG中文本召回的相关基础知识，和经典模型。 基础知识 召回环节中，需要使用文本向量检索模型 embedding模型来进行两个环节处理]]></description>
</item>
<item>
    <title>RAG基础</title>
    <link>https://www.xiaodingdang.fit/posts/rag%E5%9F%BA%E7%A1%80/</link>
    <pubDate>Mon, 25 Aug 2025 16:49:33 &#43;0800</pubDate>
    <author>蝴蝶🦋</author>
    <guid>https://www.xiaodingdang.fit/posts/rag%E5%9F%BA%E7%A1%80/</guid>
    <description><![CDATA[LLM的缺陷&ndash;为什么需要RAG？ 大模型的知识源于pretrain阶段输入的语料，对于时效性较近的问题，会出现答案错误或过时。（可]]></description>
</item>
<item>
    <title>RAG的优化方法1 提示词</title>
    <link>https://www.xiaodingdang.fit/posts/rag%E7%9A%84%E4%BC%98%E5%8C%96%E6%96%B9%E6%B3%951-%E6%8F%90%E7%A4%BA%E8%AF%8D/</link>
    <pubDate>Thu, 21 Aug 2025 20:19:59 &#43;0800</pubDate>
    <author>蝴蝶🦋</author>
    <guid>https://www.xiaodingdang.fit/posts/rag%E7%9A%84%E4%BC%98%E5%8C%96%E6%96%B9%E6%B3%951-%E6%8F%90%E7%A4%BA%E8%AF%8D/</guid>
    <description><![CDATA[本文介绍一些重要的prompt编写原则 描述答案的标注 prompt编写时，最好在prompt中清楚的描述所期望的标准答案。 设置兜底回答方式 明确]]></description>
</item>
<item>
    <title>Langgraph笔记2 长短期记忆</title>
    <link>https://www.xiaodingdang.fit/posts/langgraph%E7%AC%94%E8%AE%B02-%E9%95%BF%E7%9F%AD%E6%9C%9F%E8%AE%B0%E5%BF%86/</link>
    <pubDate>Wed, 20 Aug 2025 14:46:20 &#43;0800</pubDate>
    <author>蝴蝶🦋</author>
    <guid>https://www.xiaodingdang.fit/posts/langgraph%E7%AC%94%E8%AE%B02-%E9%95%BF%E7%9F%AD%E6%9C%9F%E8%AE%B0%E5%BF%86/</guid>
    <description><![CDATA[短期记忆 （short-term memory) 短期记忆（short-term memory)：一般来讲针对单个对话（会话），保存在内存中。 一般可以通过Sta]]></description>
</item>
<item>
    <title>Langgraph笔记1 实现一个简单demo</title>
    <link>https://www.xiaodingdang.fit/posts/langgraph%E7%AC%94%E8%AE%B01-%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95demo/</link>
    <pubDate>Wed, 20 Aug 2025 14:45:48 &#43;0800</pubDate>
    <author>蝴蝶🦋</author>
    <guid>https://www.xiaodingdang.fit/posts/langgraph%E7%AC%94%E8%AE%B01-%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95demo/</guid>
    <description><![CDATA[本文主要构建了一个简单的支持内存存储的对话机器人，同时引入了tools，支持使用tools搜索。 具体过程见代码注释 1 2 3 4 5 6 7 8 9 10 11 12 13]]></description>
</item>
<item>
    <title>如何实现一个MCP服务</title>
    <link>https://www.xiaodingdang.fit/posts/%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AAmcp%E6%9C%8D%E5%8A%A1/</link>
    <pubDate>Sat, 16 Aug 2025 14:27:41 &#43;0800</pubDate>
    <author>蝴蝶🦋</author>
    <guid>https://www.xiaodingdang.fit/posts/%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AAmcp%E6%9C%8D%E5%8A%A1/</guid>
    <description><![CDATA[创建MCP文件 如下 1 2 3 4 5 6 7 8 9 10 11 12 from mcp.server.fastmcp import FastMCP # 创建mcp server mcp = FastMCP(&#34;使用长上影线实盘策略筛选股票&#34;) @mcp.tool() def stock_select_strategy(strategy_name:]]></description>
</item>
<item>
    <title>UGC全局变量设计思路</title>
    <link>https://www.xiaodingdang.fit/posts/ugc%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F%E8%AE%BE%E8%AE%A1%E6%80%9D%E8%B7%AF/</link>
    <pubDate>Sun, 03 Aug 2025 20:38:37 &#43;0800</pubDate>
    <author>蝴蝶🦋</author>
    <guid>https://www.xiaodingdang.fit/posts/ugc%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F%E8%AE%BE%E8%AE%A1%E6%80%9D%E8%B7%AF/</guid>
    <description><![CDATA[UGC 全局变量设计思路 需求 策划需要一个属于UGC地图的全局变量，来自于不同space的玩家游玩同一张地图可以获取和修改这个变量。 遇到的问题 玩家A]]></description>
</item>
<item>
    <title>KCP2</title>
    <link>https://www.xiaodingdang.fit/posts/kcp2.0-tcp%E7%9A%84%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6/</link>
    <pubDate>Thu, 10 Jul 2025 23:35:19 &#43;0800</pubDate>
    <author>蝴蝶🦋</author>
    <guid>https://www.xiaodingdang.fit/posts/kcp2.0-tcp%E7%9A%84%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6/</guid>
    <description><![CDATA[TCP 如何实现拥塞控制 核心组件 拥塞窗口（cwnd） 本质上是一个buffer 用来存储还未被ack的数据包 cwnd的大小变化可以动态调整发送速率。 慢]]></description>
</item>
<item>
    <title>KCP1</title>
    <link>https://www.xiaodingdang.fit/posts/kcp1.0-%E5%9F%BA%E7%A1%80%E7%90%86%E8%A7%A3/</link>
    <pubDate>Thu, 10 Jul 2025 23:24:55 &#43;0800</pubDate>
    <author>蝴蝶🦋</author>
    <guid>https://www.xiaodingdang.fit/posts/kcp1.0-%E5%9F%BA%E7%A1%80%E7%90%86%E8%A7%A3/</guid>
    <description><![CDATA[1.0 KCP基础理解 KCP 与TCP，UDP的差异，适合的场景 特性 TCP UDP KCP 传输层类型 面向连接，可靠传输 无连接，不可靠传输 基于UDP协议的可靠传输 可靠性 強]]></description>
</item>
</channel>
</rss>
